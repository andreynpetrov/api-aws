openapi: "3.0.2"
info:
  version: 1.0.0
  title: MyWiki
  license:
    name: MIT
servers:
  - url: http://api.smartbrood.com/v1
paths:
  /pages:
    get:
      tags:
        - pages
      summary: List of Pages
      description: List of Wiki Pages
      operationId: listPages
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Expected response to a valid request
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pages"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Page
      operationId: createPage
      tags:
        - pages
      responses:
        201:
          description: Null response
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /pages/{pageSlug}:
    get:
      summary: Page
      operationId: getPage
      tags:
        - pages
      parameters:
        - name: pageSlug
          in: path
          required: true
          description: The slug of the Page to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
components:
  schemas:
    Page:
      required:
        - slug
        - title
        - content
      properties:
        title:
          type: string
        slug:
          type: string
        content:
          type: string
    Pages:
      type: array
      items:
        $ref: "#/components/schemas/Page"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
